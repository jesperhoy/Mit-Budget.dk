{
  "version": 3,
  "sources": ["../src/ContentRaw.ts", "../src/KatlaError.ts", "../src/Directives.ts", "../src/OperationAttr.ts", "../src/ContentTemplateResult.ts", "../src/ContentText.ts", "../src/Context.ts", "../src/ContentComponent.ts", "../src/ContentArray.ts", "../src/ContentBase.ts", "../src/OperationContent.ts", "../src/HtmlBuilder.ts", "../src/app.ts", "../src/memo.ts", "../src/_iife.ts"],
  "sourcesContent": ["import { Content } from \"./ContentBase\";\r\nimport { Context } from \"./Context\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport class RawHtml {\r\n  html:string;\r\n  constructor(html:string) {\r\n    this.html=html;\r\n  }  \r\n}\r\n\r\nexport function CreateContentRaw(v:RawHtml,op:OperationContent,ctx:Context):Content {\r\n  let t2=document.createElement(\"template\");\r\n  t2.innerHTML=v.html;\r\n  op.node2.parentNode.insertBefore(t2.content,op.node2);\r\n  return {\r\n    Update:(v:RawHtml)=>{},\r\n    Unload:()=>{},\r\n    MatchForUpdate:(nv:RawHtml)=> nv.html===v.html\r\n  }\r\n}", "import { Context } from \"./Context\";\r\n\r\nexport class KatlaError extends Error {\r\n  ctx:Context;\r\n  constructor(message:string,ctx?:Context,inner?:any) {\r\n    super(message,{cause:inner})\r\n    this.ctx=ctx;\r\n    this.name=\"KatlaError\";\r\n  }\r\n}\r\n", "import { KatlaError } from \"./KatlaError\";\r\nimport { AppType } from \"./app\";\r\n\r\nexport type DirectiveFunc= (el:HTMLElement,value:any,mods:string[],app:AppType) => (nv:any)=> void;\r\n\r\nexport const Directives=new Map<string,DirectiveFunc>;\r\n\r\nDirectives.set(\"validity\", (el:HTMLElement,v:any,mods:string[],app:AppType) => {\r\n    // <input #validity=${\"error message\"}>\r\n    const inp=<HTMLInputElement>el;\r\n    function SetIt(v:any) {\r\n      if(typeof v !==\"string\") throw new KatlaError(\"#validity value must be string\");\r\n      inp.setCustomValidity(\"\");\r\n      if(!inp.checkValidity()) return;\r\n      if(v!==\"\") inp.setCustomValidity(v);\r\n    }\r\n    SetIt(v);\r\n    return (nv:any)=> { v=nv; SetIt(nv); }\r\n  });\r\n\r\n  \r\nDirectives.set(\"ref\", (el:HTMLElement,v:any,mods:string[],app:AppType) => {\r\n    // <div #ref=${el=>TheDiv=el} >\r\n    if(typeof v !==\"function\") throw new KatlaError(\"#ref value must be function\");\r\n    v(el);\r\n    return ()=>{}\r\n  });\r\n\r\n\r\nDirectives.set(\"bind\",(el:HTMLElement,bindTo:any,mods:string[],app:AppType) => {\r\n  let tp=el.tagName.toLowerCase();\r\n  if(tp===\"input\") {\r\n    tp=(<HTMLInputElement>el).type;\r\n    if(!tp) tp=\"text\";\r\n    tp=tp.toLowerCase();\r\n  }\r\n  let BoundVal:any;\r\n  let SetVal:(v:string|number|boolean)=>void;\r\n  let LastVal:any;\r\n\r\n  const HasTrimMod=mods.indexOf(\"trim\")>=0;\r\n\r\n  function GetValueValue():string|number {\r\n    let vv:string|number=(<HTMLInputElement>el).value;\r\n    if(tp===\"number\" || tp===\"range\" || mods.indexOf(\"number\")>=0) vv=parseInt(vv);\r\n    if(HasTrimMod) vv=(<string>vv).trim();\r\n    return vv;\r\n  }\r\n\r\n  function SetElemProp() {\r\n    SetVal=undefined;\r\n    if(Array.isArray(bindTo) && bindTo.length===2) {\r\n      if (Array.isArray(bindTo[0]) && typeof bindTo[1]===\"number\") {\r\n        // #bind=${[Array,number]} \r\n        BoundVal=bindTo[0][bindTo[1]];\r\n        SetVal=v=>bindTo[0][bindTo[1]]=v;\r\n      } else if (typeof bindTo[0]===\"object\" && typeof bindTo[1]===\"string\") {\r\n        // #bind=${[object,propName]} \r\n        if(!bindTo[0].hasOwnProperty(bindTo[1])) throw new KatlaError(tp + \" #bind to object does not have property '\" + bindTo[1] + \"'\");\r\n        BoundVal=bindTo[0][bindTo[1]];\r\n        SetVal=v=>bindTo[0][bindTo[1]]=v;\r\n      } else if (typeof bindTo[0]===\"function\" && typeof bindTo[1]===\"function\") {\r\n        // #bind=${[getFunc,setFunc]} - DEPRECATED\r\n        BoundVal=bindTo[0]();\r\n        SetVal=bindTo[1];\r\n      } else if (typeof bindTo[1]===\"function\") {\r\n        // #bind=${[value,setFunc]}\r\n        BoundVal=bindTo[0];\r\n        SetVal=bindTo[1];\r\n      }\r\n    } else if(Array.isArray(bindTo) && bindTo.length===1 && Array.isArray(bindTo[0])) {\r\n        // #bind=${[Array]}\r\n        if(tp!==\"checkbox\") throw new KatlaError(\"Can only #bind to [Array] with input/checkbox\"); \r\n        BoundVal=bindTo[0];\r\n        SetVal=()=>{}; //dummy to prevent error\r\n    } \r\n    if(!SetVal) throw new KatlaError(\"Can only #bind to {object}.PropName / [Object,string] / [Array,number] / [getFunc,setFunc]\");\r\n\r\n    if(tp===\"radio\") {\r\n      if(!el.hasAttribute(\"value\")) throw new KatlaError(\"input/radio element missing 'value' attribute - for #bind\");\r\n      let vv=GetValueValue(); \r\n      let value=BoundVal===vv;\r\n      if(value===LastVal) return;\r\n      (<HTMLInputElement>el).checked=value;\r\n      LastVal=value;\r\n    } else if(tp===\"checkbox\") {\r\n      if(typeof BoundVal===\"boolean\") {\r\n        if(BoundVal===LastVal) return;\r\n        (<HTMLInputElement>el).checked=BoundVal; \r\n        LastVal=BoundVal;\r\n        return; \r\n      } else {\r\n        if(!Array.isArray(BoundVal)) throw new KatlaError(\"#bind value for input/checkbox must be either boolean or array\");\r\n        if(!el.hasAttribute(\"value\")) throw new KatlaError(\"input/checkbox element missing 'value' attribute - for #bind with array value\");\r\n        let vv=GetValueValue(); \r\n        let value=BoundVal.indexOf(vv)>=0;\r\n        if(value===LastVal) return;\r\n        (<HTMLInputElement>el).checked=value;\r\n        LastVal=value;\r\n      }\r\n    } else {\r\n      if(BoundVal===LastVal) return;\r\n      (<HTMLInputElement>el).value= Number.isNaN(BoundVal) ? '': BoundVal.toString();\r\n      LastVal=BoundVal;\r\n    }\r\n  }\r\n\r\n  SetElemProp();\r\n\r\n  function MyHandler(e:Event) {\r\n    let vv=GetValueValue();\r\n    if(tp===\"radio\") {\r\n      if(!(<HTMLInputElement>el).checked) return;\r\n      SetVal(vv);\r\n      LastVal=vv;\r\n    } else if (tp===\"checkbox\") {\r\n      let ck=(<HTMLInputElement>el).checked;\r\n      if(typeof BoundVal===\"boolean\") {\r\n        SetVal(ck);\r\n      } else {\r\n        let i=BoundVal.indexOf(vv);\r\n        if(ck && i<0) BoundVal.push(vv);\r\n        if(!ck && i>=0) BoundVal.splice(i,1); \r\n      }\r\n      LastVal=ck;\r\n    } else {\r\n      SetVal(vv);\r\n      LastVal=vv;\r\n      if(HasTrimMod && e.type===\"change\" && (<HTMLInputElement>el).value!==LastVal) (<HTMLInputElement>el).value=LastVal;\r\n    }\r\n\r\n    if(app.autoRedraw) {\r\n      if(mods.indexOf(\"noredraw\")<0) app.redraw();\r\n    } else {\r\n      if(mods.indexOf(\"redraw\")>=0) app.redraw();\r\n    }\r\n  }\r\n\r\n  const HasEagerMod=mods.indexOf(\"eager\")>=0;\r\n  if(HasEagerMod) el.addEventListener(\"input\", MyHandler);\r\n  if(!HasEagerMod || HasTrimMod) el.addEventListener(\"change\", MyHandler);\r\n\r\n \r\n  return (nv:any)=>{ \r\n    bindTo=nv;\r\n    SetElemProp();\r\n  }\r\n});\r\n\r\n", "import { Directives } from \"./Directives\";\r\nimport { Context } from \"./Context\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport { KatlaError } from \"./KatlaError\";\r\n\r\nexport function CreateOperationAttr(node:HTMLElement,name:string,getVal:(args:any[])=>any,ctx:Context,content:any): Operation {\r\n  let LastVar=content;\r\n  let DirUpdate:(v:any)=>void;\r\n\r\n  if (name.charAt(0)===\"@\") {\r\n    // event\r\n    if(typeof content !==\"function\") throw new KatlaError(name + \" handler must be function\",ctx);\r\n    let parts=name.substr(1).split(\"|\");\r\n    let opt={ capture: parts.indexOf(\"capture\")>0,\r\n              once: parts.indexOf(\"once\")>0,\r\n              passive: parts.indexOf(\"passive\")>0 }\r\n    node.addEventListener(parts[0], e => {\r\n      if(parts.indexOf(\"self\")>0 && e.target!==node) return;\r\n      if(parts.indexOf(\"prevent\")>0) e.preventDefault();\r\n      if(parts.indexOf(\"stop\")>0) e.stopPropagation();\r\n      let frv=LastVar(e);\r\n      if(ctx.app.autoRedraw ? !parts.includes(\"noredraw\") : parts.includes(\"redraw\")) {\r\n        ctx.app.redraw();\r\n        if(frv instanceof Promise) frv.then(()=>ctx.app.redraw());\r\n      }\r\n    },opt);  \r\n\r\n\r\n  } else if (name.charAt(0)===\".\") {\r\n    // property\r\n    (<any>node)[name.substr(1)]=content;\r\n\r\n  } else if (name.charAt(0)===\"#\") {\r\n    // directive\r\n    let parts=name.substr(1).split(\"|\");\r\n    let hh=Directives.get(parts[0]); \r\n    if(hh===undefined) throw new KatlaError(\"Unknown directive '#\"+parts[0] + \"'\",ctx);\r\n    DirUpdate=hh(node,content,parts.slice(1),ctx.app);\r\n\r\n  } else {\r\n    // plain old attribute\r\n    if(content===false || content===null || content===undefined) {\r\n      // Do nothing - on creation there is no need to remove attribute if null (won't be there)\r\n    } else if(content===true) {\r\n      node.setAttribute(name,\"\");\r\n    } else {\r\n      node.setAttribute(name,content.toString());\r\n    }\r\n  }\r\n\r\n  return {\r\n    GetData:getVal,\r\n    Update: (v:any)=> {\r\n      if(v===LastVar && typeof v !==\"object\") return;\r\n      LastVar=v;\r\n      if (name.charAt(0)===\"@\") {\r\n        // event\r\n        if(typeof v !==\"function\") throw new KatlaError(name + \" handler must be function\",ctx);\r\n        // do nothing - LastVar already set to new function reference\r\n      } else if(name.charAt(0)===\".\") {\r\n        // property\r\n        (<any>node)[name.substr(1)]=v;\r\n      } else if(name.charAt(0)===\"#\") {\r\n        // directive\r\n        DirUpdate(v);\r\n      } else {\r\n        if(v===false || v===null || v===undefined) {\r\n          node.removeAttribute(name);\r\n        } else if(v===true) {\r\n          node.setAttribute(name,\"\");\r\n        } else {\r\n          node.setAttribute(name,v.toString());      \r\n        }\r\n      }\r\n    },\r\n    \r\n    Unload:()=>{}\r\n  }\r\n}\r\n", "import { Content } from \"./ContentBase\";\r\nimport { Context } from \"./Context\";\r\nimport { HtmlBuilder } from \"./HtmlBuilder\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport function CreateContentTemplateResult(tr:TemplateResult,op:OperationContent,ctx:Context):Content {\r\n  let Live=tr.bldr.MakeLive(tr.args,op.node2,ctx);\r\n  return {\r\n    Update:(v:TemplateResult)=>Live.Update(v.args),\r\n    Unload:Live.Unload,\r\n    MatchForUpdate:(v:TemplateResult)=>v.bldr===tr.bldr\r\n  }\r\n}\r\n\r\nexport class TemplateResult {\r\n  bldr:HtmlBuilder;\r\n  args:any[];\r\n  constructor(bldr:HtmlBuilder,args:any[]) {\r\n    this.bldr=bldr;\r\n    this.args=args;\r\n  }\r\n}", "import { Content } from \"./ContentBase\";\r\nimport { Context } from \"./Context\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport function CreateContentText(v:string|number|object,op:OperationContent,ctx:Context):Content {\r\n  let ctNode=document.createTextNode(v.toString());\r\n  op.node2.parentNode.insertBefore(ctNode,op.node2);\r\n  return {\r\n    Update:newV=>{\r\n        if(newV!==v) {\r\n          v=newV;\r\n          ctNode.data=newV.toString();\r\n        }\r\n      },\r\n    Unload:()=>{},\r\n    MatchForUpdate:v=>true\r\n  }\r\n}", "import { ComponentType } from \"./ContentComponent\";\r\nimport {AppType} from \"./app\";\r\n\r\nexport class Context {\r\n  readonly app:AppType;\r\n  readonly component:ComponentType;\r\n  parent?:Context;\r\n  values:Map<string,any>=new Map<string,any>;\r\n  constructor(app:AppType,parent?:Context,component?:ComponentType) {\r\n    this.app=app;\r\n    this.parent=parent;\r\n    this.component=component;\r\n  }\r\n  setValue(key:string,v:any):void {\r\n    this.values.set(key,v);\r\n  }\r\n  getValue(key:string):any {\r\n    let rv=this.values.get(key);\r\n    if(rv!==undefined) return rv;\r\n    if(this.parent!==undefined) return this.parent.getValue(key);\r\n    return undefined;\r\n  } \r\n}", "import { Context } from \"./Context\";\r\nimport { GetContentType,ContentType,CreateContent } from \"./ContentBase\";\r\nimport { OperationContent } from \"./OperationContent\";\r\nimport { AppType } from \"./app\";\r\nimport { KatlaError } from \"./KatlaError\";\r\n\r\nexport type ComponentType = {\r\n  render:()=>any;\r\n  load?:()=>void;\r\n  unload?:()=>void;\r\n  $app?:AppType;\r\n  $get?:(key:string)=>any;\r\n  $set?:(key:string,v:any)=>void;\r\n  $parent?:ComponentType;\r\n  $redraw?:()=>void;\r\n}\r\n\r\ntype ComponentWrapper=[new()=>ComponentType,Object,(c:ComponentType)=>void];\r\n\r\nexport function CreateContentComponent(cw:ComponentWrapper,op:OperationContent,ctx:Context) {\r\n  let comp=new cw[0];\r\n  comp.$app=ctx.app; \r\n  comp.$parent=ctx.component; \r\n  const MyCtx=new Context(ctx.app,ctx,comp);\r\n  comp.$get=(key:string)=>MyCtx.getValue(key);\r\n  comp.$set=(key:string,v:any)=>MyCtx.setValue(key,v);\r\n  comp.$redraw=UpdateMe;\r\n  if(cw.length>1) Object.assign(comp,cw[1]);\r\n  if(comp.load) comp.load();\r\n  if(!comp.render) throw new KatlaError(\"Component object must have .render property\",ctx);\r\n  if(typeof comp.render!==\"function\") throw new KatlaError(\"Component .render property must be a function\",ctx);\r\n  if(cw.length>2) cw[2](comp);\r\n  let Output=comp.render();\r\n  let ctType=GetContentType(Output,ctx);\r\n  let Content=CreateContent(Output,op,MyCtx)\r\n\r\n  function UpdateMe() {\r\n    if(cw.length>1) Object.assign(comp,cw[1]);\r\n    Output=comp.render();\r\n    let ctType2=GetContentType(Output,ctx);\r\n    if(ctType2===ContentType.NoChange) return;\r\n    if(ctType===ctType2 && Content.MatchForUpdate(Output)) {     \r\n      Content.Update(Output)\r\n    } else {\r\n      Content.Unload();\r\n      op.ClearContent();\r\n      ctType=ctType2;\r\n      Content=CreateContent(Output,op,MyCtx);\r\n    }\r\n  }\r\n\r\n  return {\r\n    Update:(v:ComponentWrapper)=>{\r\n      if(!comp) return; // exit if unloaded\r\n      cw=v;\r\n      UpdateMe();\r\n    },\r\n    Unload:()=>{\r\n      if(comp.unload) comp.unload();\r\n      Content.Unload();\r\n      comp=undefined;\r\n    },\r\n    MatchForUpdate:(v:ComponentWrapper)=>v[0]=== cw[0]\r\n  }\r\n}\r\n", "import { CreateOperationContent, OperationContent } from \"./OperationContent\";\r\nimport { Content } from \"./ContentBase\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport function CreateContentArray(v:any[],op:OperationContent,ctx:Context):Content {\r\n  let arrOps:OperationContent[]=[];\r\n  Make(v);\r\n\r\n  // this is a function because it is also called from Update\r\n  function Make(items:any[]) {\r\n    if(items.length===0) return;\r\n    let frag=document.createDocumentFragment();\r\n    let cmt1=document.createComment(\"\");\r\n    frag.append(cmt1);\r\n    let aop:OperationContent,cmt2:Comment;\r\n    for(const itm of items) {\r\n      cmt2=document.createComment(\"\");\r\n      frag.append(cmt2);\r\n      aop=CreateOperationContent(cmt1,-1,ctx,itm);\r\n      arrOps.push(aop);\r\n      cmt1=cmt2;\r\n    }  \r\n    op.node2.parentNode.insertBefore(frag,op.node2);\r\n  } \r\n\r\n  return {\r\n    Update:items=>{\r\n      if(arrOps.length===0) { Make(items); return; } // faster to call Make than inserting individual items - because Make uses fragtment\r\n      if(items.length===0) { op.ClearContent(); arrOps=[]; return; } \r\n      let aop:OperationContent,naop:OperationContent;\r\n      for(let i=0;i<items.length || i<arrOps.length;i++) {\r\n        if(i<items.length && i<arrOps.length) {\r\n          arrOps[i].Update(items[i])\r\n        } else if (items.length<arrOps.length) {\r\n          // new length is less - so delete remaining\r\n          aop=arrOps[i];\r\n          aop.Unload();\r\n          aop.ClearContent();\r\n          aop.node1.parentNode.removeChild(aop.node1);\r\n          arrOps[i-1].node2=aop.node2;\r\n          arrOps.splice(i,1);\r\n          i-=1;\r\n        } else {\r\n          // new length is more - so insert remaining\r\n          let nc=document.createComment(\"\");\r\n          aop=arrOps[arrOps.length-1];\r\n          aop.node2.parentNode.insertBefore(nc,aop.node2);\r\n          naop=CreateOperationContent(nc,-1,ctx,items[i]);\r\n          aop.node2=nc;\r\n          arrOps.push(naop);\r\n        }\r\n      }\r\n    },\r\n\r\n    Unload:()=>{arrOps.forEach(op=>op.Unload());arrOps=[]},\r\n\r\n    MatchForUpdate:v=>true\r\n  }\r\n}\r\n", "import { Context } from \"./Context\";\r\nimport { CreateContentTemplateResult, TemplateResult } from \"./ContentTemplateResult\";\r\nimport { CreateContentRaw,RawHtml } from \"./ContentRaw\";\r\nimport { CreateContentText } from \"./ContentText\";\r\nimport { CreateContentComponent } from \"./ContentComponent\";\r\nimport { CreateContentArray } from \"./ContentArray\";\r\nimport { OperationContent } from \"./OperationContent\";\r\nimport { KatlaError } from \"./KatlaError\";\r\n\r\nexport type Content={\r\n  Update:(v:any)=>void;\r\n  Unload:()=>void;\r\n  MatchForUpdate:(v:any)=>boolean;\r\n}\r\n\r\nexport const enum ContentType  {\r\n  Null,\r\n  Text,\r\n  Component,\r\n  Raw,\r\n  TemplateResult,\r\n  NoChange,\r\n  Array\r\n}\r\n\r\nexport function GetContentType(v:any,ctx:Context):ContentType {\r\n  if(v===null || v===\"\" || v===false) return ContentType.Null;\r\n  if(v instanceof TemplateResult) return ContentType.TemplateResult; \r\n  if(Array.isArray(v)) {\r\n    if(v.length>0 && typeof v[0]===\"function\") {\r\n      if(v.length>1) {\r\n        if(typeof v[1] !==\"object\") throw new KatlaError(\"Component props must be object\",ctx);\r\n        [\"render\",\"load\",\"unload\",\"context\"].forEach(x=> {if(v[1].hasOwnProperty(x)) throw new KatlaError(\"Invalid component props property name: '\" + x + \"'\",ctx)});\r\n        if(v.length>2 && typeof v[2] !==\"function\") throw new KatlaError(\"Component ref must be function\",ctx);\r\n      }\r\n      return ContentType.Component;\r\n    }\r\n    return ContentType.Array; \r\n  }\r\n  if(v instanceof RawHtml) return ContentType.Raw;\r\n  if(v instanceof NoChange)  return ContentType.NoChange;\r\n  if(typeof v ===\"string\" || typeof v===\"number\" || typeof v===\"object\") return ContentType.Text;\r\n  throw new KatlaError(\"Unknown content var type: \" + typeof v,ctx);\r\n}\r\n\r\nexport function CreateContent(v:any,op:OperationContent,ctx:Context):Content {\r\n  let tp=GetContentType(v,ctx)\r\n  switch(tp) {\r\n    case ContentType.Null:\r\n      return {Update:v=>{},Unload:()=>{},MatchForUpdate:v=>true};\r\n    case ContentType.Text:\r\n      return CreateContentText(<string|number|object>v,op,ctx);\r\n    case ContentType.Component:\r\n      return CreateContentComponent(v,op,ctx);\r\n    case ContentType.Raw:\r\n      return CreateContentRaw(v,op,ctx);\r\n    case ContentType.TemplateResult:\r\n      return CreateContentTemplateResult(v,op,ctx);\r\n    case ContentType.Array:\r\n      return CreateContentArray(v,op,ctx);\r\n    case ContentType.NoChange:\r\n      throw new KatlaError(\"NoChange at creation\",ctx);\r\n  }   \r\n}\r\n\r\nexport class NoChange {\r\n}", "import { GetContentType,ContentType,CreateContent,Content } from \"./ContentBase\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport { Context } from \"./Context\";\r\n\r\nexport type OperationContent = Operation & {\r\n  node1: Node,\r\n  node2: Node,\r\n  ClearContent: ()=>void,\r\n/*  MatchArrItem: (v:any)=>boolean,*/\r\n}\r\n\r\nexport function CreateOperationContent(node1x:Node,varIdx:number,ctx:Context,content:any):OperationContent {\r\n  let ctType=GetContentType(content,ctx);\r\n  let Content:Content;\r\n\r\n  let rv:OperationContent= {\r\n    GetData: (args:any[])=> args[varIdx],\r\n    node1:node1x,\r\n    node2:node1x.nextSibling,\r\n    Update: (v:any)=> {\r\n      let ctType2=GetContentType(v,ctx);\r\n      if(ctType2===ContentType.NoChange) return;   \r\n      if(ctType===ctType2 && Content.MatchForUpdate(v)) {\r\n        Content.Update(v)\r\n      } else {\r\n        Content.Unload();\r\n        rv.ClearContent();\r\n        ctType=ctType2;\r\n        Content=CreateContent(v,rv,ctx);\r\n      }\r\n    },\r\n    ClearContent: () => {\r\n      let n=rv.node1.nextSibling;\r\n      while(n!==rv.node2) {\r\n        rv.node1.parentNode.removeChild(n);\r\n        n=rv.node1.nextSibling;\r\n      }\r\n    },\r\n    Unload:()=> ()=> Content.Unload(),\r\n/*    MatchArrItem: (v:any)=> {\r\n      let ctType3=GetContentType(v,ctx);\r\n      return ctType===ContentType.NoChange || (ctType===ctType3 && Content.MatchForUpdate(v));\r\n    }*/\r\n  }\r\n\r\n  Content=CreateContent(content,rv,ctx);\r\n  return rv;\r\n}\r\n\r\n\r\n", "import { Context } from \"./Context\";\r\nimport { KatlaError } from \"./KatlaError\";\r\nimport { CreateOperationAttr } from \"./OperationAttr\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport { CreateOperationContent } from \"./OperationContent\";\r\n\r\ntype PlaceHolder = {\r\n  path:number[],\r\n  CreateOp:(node:HTMLElement,ctx:Context,args:any[])=>Operation|null\r\n}\r\n\r\nexport class HtmlBuilder {\r\n  #phs:PlaceHolder[]=[];\r\n  #tmpl=document.createElement(\"template\");\r\n\r\n  constructor(fixed:TemplateStringsArray) {\r\n    let x=\"\";\r\n    for(let i=0;i<fixed.length-1;i++) {\r\n      x +=fixed[i];\r\n      x +=this.#InAttr(x) ? '{{fv' + i + '}}' : '<!--{{fv' + i + '}}-->'; \r\n    }\r\n    x+=fixed[fixed.length-1];\r\n    this.#tmpl.innerHTML=x;\r\n    this.#FillPlaceHolders(this.#tmpl.content,[]);     \r\n  }\r\n\r\n  #InAttr(x:string) {\r\n    return x.lastIndexOf(\"<\") > x.lastIndexOf(\">\");\r\n  }\r\n\r\n  // is a function because it needs to call itself recursively\r\n  #FillPlaceHolders(node:Node,path:number[]) {\r\n    let cn:Node,x:string,k:number,fvID:number,attr:Attr,cnPath:number[];\r\n    for(let i=0;i<node.childNodes.length;i++) {\r\n      cn=node.childNodes[i];\r\n      cnPath=path.concat(i);\r\n      if(cn.nodeType===1) { //element\r\n        let cne=<HTMLElement>cn;\r\n        // if this is a <select> element - process children first - cannot set value before children present\r\n        if(cne.tagName.toLowerCase()===\"select\") this.#FillPlaceHolders(cn,cnPath);\r\n        let classSC:{class:string,argidx:number}[]=[];\r\n        let dirPhs:PlaceHolder[]=[];\r\n        let gotClass=false;\r\n        for(let j=0; j<cne.attributes.length;j++) {\r\n          attr=cne.attributes[j];\r\n          if(attr.name===\"class\") {\r\n            if(classSC.length>0) throw new KatlaError(\"Cannot combine 'class' and 'class:...' attributes on same element\");\r\n            gotClass=true;\r\n          }\r\n          x=attr.value;\r\n          k=x.indexOf(\"{{fv\");\r\n          if(k<0){\r\n            if(attr.name.startsWith(\"class:\")) throw new KatlaError(attr.name + \" attribute must have ${boolean} value\");\r\n            if(attr.name.charAt(0)===\"#\" || attr.name.charAt(0)===\".\") {\r\n            // fixed value special attribute \r\n              (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrStatic(cnPath,attr.name,x)); // 1=static value\r\n              cne.removeAttribute(attr.name);\r\n              j-=1;\r\n            }\r\n            continue;\r\n          }\r\n          let va:(string|number)[]=[];\r\n          while(k>=0) {\r\n            if(k>0) va.push(x.substr(0,k));\r\n            x=x.substr(k+4)\r\n            k=x.indexOf(\"}}\");\r\n            if(k<0) throw new KatlaError(\"Unexpected missing }}\");\r\n            fvID=parseInt(x.substr(0,k));\r\n            va.push(fvID);\r\n            x=x.substr(k+2);\r\n            k=x.indexOf(\"{{fv\");\r\n          }\r\n          if(x.length>0) va.push(x);\r\n          if(va.length===1) {\r\n            // simple attribute (type 2)\r\n            if(attr.name.startsWith(\"class:\")) {\r\n              if(gotClass) throw new KatlaError(\"Cannot combine 'class' and 'class:...' attributes on same element\");\r\n              classSC.push({class:attr.name.substr(6),argidx:<number>(va[0])})\r\n            } else {\r\n              (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrDynamic(cnPath, attr.name, <number>(va[0]))); \r\n            }\r\n          } else {\r\n            if(attr.name.startsWith(\"class:\")) throw new KatlaError(attr.name + \" attribute must have ${boolean} value\");\r\n            // concat attribute (type 3)\r\n            (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrConcat(cnPath,attr.name,va)); \r\n          }\r\n          cne.removeAttribute(attr.name);\r\n          j-=1;\r\n        }\r\n        if(classSC.length>0) this.#phs.push(CreatePlaceholderAttrClasses(cnPath,classSC)); \r\n        // add placeholders for directives (attr.name start with #) last - so other attributes are set before directives run\r\n        this.#phs.push(...dirPhs);\r\n        if(cne.tagName.toLowerCase()!==\"select\") this.#FillPlaceHolders(cn,cnPath);\r\n\r\n      } else if (cn.nodeType===8) { //nodeType 8 = comment\r\n        let cnc=<Comment>cn;\r\n        if(cnc.data.substr(0,4)===\"{{fv\") {\r\n          fvID=parseInt(cnc.data.substr(4,cnc.data.length-6));\r\n          cnc.data=\"\";\r\n          node.insertBefore(document.createComment(\"\"),cn);\r\n          this.#phs.push(CreatePlaceholderContent(cnPath,fvID));\r\n          i+=1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  MakeLive(args:any[],beforeNode:Node,ctx:Context) {\r\n    let cl=this.#tmpl.content.cloneNode(true); \r\n    let ops=this.#phs.map(ph=>{\r\n      // get all nodes first - because ph.CreateOp will insert new node - changing indexes\r\n      let n=cl;\r\n      ph.path.forEach(idx=>n=n.childNodes[idx])\r\n      return {ph,n};\r\n    }).map(itm=> itm.ph.CreateOp(<HTMLElement>(itm.n),ctx,args)).filter(op=>op!==null);\r\n\r\n    beforeNode.parentNode.insertBefore(cl,beforeNode);\r\n    return {Update: (args:any[])=>{for(const op of ops) op.Update(op.GetData(args))},\r\n            Unload: ()=> {for(const op of ops) op.Unload()}};\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CreatePlaceholderAttrStatic(path:number[],name:string,value:string) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,ctx:Context,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>value;\r\n      // this is executed also for static - because it initializes the attribute with the static value\r\n      CreateOperationAttr(node,name, getVal, ctx, getVal(args)); \r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrDynamic(path:number[],name:string,value:number) {\r\n  if(name.startsWith(\"_\")) name=name.substring(1);\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,ctx:Context,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>args[value];\r\n      return CreateOperationAttr(node,name, getVal, ctx, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrConcat(path:number[],name:string,value:(string|number)[]) {\r\n  if(name.startsWith(\"_\")) name=name.substring(1);\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,ctx:Context,args:any[]):Operation|null {\r\n      let getVal: (args:any[])=>any;\r\n      if((name===\"#bind\" || name.substr(0,6)===\"#bind|\") && value.length===2 && typeof value[1]===\"string\" && value[1].charAt(0)===\".\") {\r\n        // #bind={obj}.prop\r\n        //getVal=(args:any[])=>MakeRef(args[<number>(value[0])],(<string>(value[1])).substr(1));\r\n        getVal=(args:any[])=>[args[<number>(value[0])] , (<string>(value[1])).substr(1)] //turn it into [Object,propName]\r\n      }  else {\r\n        getVal=(args:any[])=>value.map((p:string|number)=> typeof p===\"string\" ? p : args[p].toString()).join(\"\");\r\n      }\r\n      return CreateOperationAttr(node,name, getVal, ctx, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrClasses(path:number[],value:{class:string,argidx:number}[]) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,ctx:Context,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>{\r\n        let rv=\"\";\r\n        let v:unknown;\r\n        for(let i=0;i<value.length;i++) {\r\n          v=args[value[i].argidx];\r\n          if(typeof v!==\"boolean\") throw new KatlaError(\"class:\" + value[i].class + \" value must be boolean\");\r\n          if(v) rv+=(rv.length>0?\" \":\"\") + value[i].class;\r\n        }\r\n        return rv.length===0 ? false:rv;\r\n      }\r\n      return CreateOperationAttr(node,\"class\", getVal, ctx, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderContent(path:number[],varidx:number) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,ctx:Context,args:any[]):Operation|null {\r\n       return CreateOperationContent(node,varidx,ctx,args[varidx])\r\n    }\r\n  };\r\n}\r\n", "import { HtmlBuilder } from \"./HtmlBuilder\";\r\nimport { CreateOperationContent, OperationContent } from \"./OperationContent\";\r\nimport { TemplateResult } from \"./ContentTemplateResult\";\r\nimport {Context} from \"./Context\";\r\n\r\nlet CachedBuilders=new Map<TemplateStringsArray,HtmlBuilder>();\r\nexport function html(fixed:TemplateStringsArray,...args:any[]) {\r\n  let bldr=CachedBuilders.get(fixed);\r\n  if(!bldr) {\r\n    bldr=new HtmlBuilder(fixed);\r\n    CachedBuilders.set(fixed,bldr);\r\n  }\r\n  return new TemplateResult(bldr,args);\r\n}\r\n\r\nexport type AppType={\r\n  autoRedraw:boolean,\r\n  redraw: ()=>void,\r\n  clear: ()=>void\r\n}\r\n\r\nexport function app(el:string|Element,render:()=>any) {\r\n  if(typeof el ===\"string\") el=document.querySelector(el);\r\n  let op:OperationContent;\r\n  let rv:AppType={\r\n    autoRedraw:true,\r\n    redraw() { op.Update(render()) },\r\n    clear() { op.ClearContent() } \r\n  };\r\n  let frag=document.createDocumentFragment();\r\n  let c1=document.createComment(\"Katla\");\r\n  frag.appendChild(c1);\r\n  let c2=document.createComment(\"/Katla\");\r\n  frag.appendChild(c2);\r\n  op=CreateOperationContent(c1,-1, new Context(rv),render());\r\n  el.appendChild(frag);\r\n  return rv;\r\n}\r\n", "import { NoChange } from \"./ContentBase\";\r\nimport { ComponentType } from \"./ContentComponent\";\r\nimport { KatlaError } from \"./KatlaError\";\r\n\r\nclass compMemo {\r\n  deps:any[];\r\n  render2:()=>any;\r\n  #lastDeps:any[];\r\n  render() {\r\n    if(this.#lastDeps && this.#lastDeps.length===this.deps.length) {\r\n      let same=true;\r\n      for(let i=0;i<this.#lastDeps.length;i++) {\r\n        if(this.#lastDeps[i]!==this.deps[i]) {same=false;break;}\r\n      }\r\n      if(same) {\r\n        this.deps=undefined;\r\n        return new NoChange();\r\n      }\r\n    }\r\n    this.#lastDeps=Object.assign({},this.deps);\r\n    this.deps=undefined;\r\n    return this.render2();\r\n  }\r\n}\r\n\r\nexport function memo(deps:any[],render:()=>any):[new()=>ComponentType,Object] {\r\n  if(!deps || !Array.isArray(deps)) throw new KatlaError(\"memo deps argument must be array\");\r\n  if(!render || typeof render!==\"function\") throw new KatlaError(\"memo render argument must be function\");\r\n  return [compMemo,{deps,render2:render}]\r\n}\r\n", "import { RawHtml } from \"./ContentRaw\";\r\nimport { html, app } from './app';\r\nimport { memo } from \"./memo\";\r\nimport { Directives, DirectiveFunc } from \"./Directives\";\r\n\r\nconst raw= (html:string)=> new RawHtml(html);\r\n\r\nconst directive= (name:string, f:DirectiveFunc) => Directives.set(name,f);\r\n\r\n(<any>globalThis).Katla={html,app,raw,directive,memo};\r\n(<any>globalThis).html=html;\r\n"],
  "mappings": "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",
  "names": ["RawHtml", "html", "__publicField", "CreateContentRaw", "v", "op", "ctx", "t2", "nv", "KatlaError", "message", "ctx", "inner", "__publicField", "Directives", "el", "v", "mods", "app", "inp", "SetIt", "KatlaError", "nv", "bindTo", "tp", "BoundVal", "SetVal", "LastVal", "HasTrimMod", "GetValueValue", "vv", "SetElemProp", "value", "MyHandler", "e", "ck", "i", "HasEagerMod", "CreateOperationAttr", "node", "name", "getVal", "ctx", "content", "LastVar", "DirUpdate", "KatlaError", "parts", "opt", "e", "frv", "hh", "Directives", "v", "CreateContentTemplateResult", "tr", "op", "ctx", "Live", "v", "TemplateResult", "bldr", "args", "__publicField", "CreateContentText", "v", "op", "ctx", "ctNode", "newV", "Context", "app", "parent", "component", "__publicField", "key", "v", "rv", "CreateContentComponent", "cw", "op", "ctx", "comp", "MyCtx", "Context", "key", "v", "UpdateMe", "KatlaError", "Output", "ctType", "GetContentType", "Content", "CreateContent", "ctType2", "CreateContentArray", "v", "op", "ctx", "arrOps", "Make", "items", "frag", "cmt1", "aop", "cmt2", "itm", "CreateOperationContent", "naop", "i", "nc", "GetContentType", "v", "ctx", "TemplateResult", "KatlaError", "x", "RawHtml", "NoChange", "CreateContent", "op", "CreateContentText", "CreateContentComponent", "CreateContentRaw", "CreateContentTemplateResult", "CreateContentArray", "CreateOperationContent", "node1x", "varIdx", "ctx", "content", "ctType", "GetContentType", "Content", "rv", "args", "v", "ctType2", "CreateContent", "n", "_phs", "_tmpl", "_InAttr", "InAttr_fn", "_FillPlaceHolders", "FillPlaceHolders_fn", "HtmlBuilder", "fixed", "__privateAdd", "x", "i", "__privateMethod", "__privateGet", "args", "beforeNode", "ctx", "cl", "ops", "ph", "n", "idx", "itm", "op", "node", "path", "cn", "k", "fvID", "attr", "cnPath", "cne", "classSC", "dirPhs", "gotClass", "j", "KatlaError", "CreatePlaceholderAttrStatic", "va", "CreatePlaceholderAttrDynamic", "CreatePlaceholderAttrConcat", "CreatePlaceholderAttrClasses", "cnc", "CreatePlaceholderContent", "name", "value", "getVal", "CreateOperationAttr", "p", "rv", "v", "varidx", "CreateOperationContent", "CachedBuilders", "html", "fixed", "args", "bldr", "HtmlBuilder", "TemplateResult", "app", "el", "render", "op", "rv", "frag", "c1", "c2", "CreateOperationContent", "Context", "_lastDeps", "compMemo", "__publicField", "__privateAdd", "__privateGet", "same", "i", "NoChange", "__privateSet", "memo", "deps", "render", "KatlaError", "raw", "html", "RawHtml", "directive", "name", "f", "Directives", "app", "memo"]
}
