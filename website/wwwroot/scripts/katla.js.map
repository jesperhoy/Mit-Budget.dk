{
  "version": 3,
  "sources": ["../src/ContentRaw.ts", "../src/Directives.ts", "../src/OperationAttr.ts", "../src/ContentTemplateResult.ts", "../src/ContentText.ts", "../src/ContentComponent.ts", "../src/ContentArray.ts", "../src/ContentBase.ts", "../src/OperationContent.ts", "../src/HtmlBuilder.ts", "../src/app.ts", "../src/memo.ts", "../src/SpiritPage.ts", "../src/_iife.ts"],
  "sourcesContent": ["import { Content } from \"./ContentBase\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport class RawHtml {\r\n  html:string;\r\n  constructor(html:string) {\r\n    this.html=html;\r\n  }  \r\n}\r\n\r\nexport function CreateContentRaw(v:RawHtml,op:OperationContent):Content {\r\n  let t2=document.createElement(\"template\");\r\n  t2.innerHTML=v.html;\r\n  op.node2.parentNode.insertBefore(t2.content,op.node2);\r\n  return {\r\n    Update:(v:RawHtml)=>{},\r\n    Unload:()=>{},\r\n    MatchForUpdate:(nv:RawHtml)=> nv.html===v.html\r\n  }\r\n}", "export type DirectiveFunc= (el:HTMLElement,value:any,mods:string[],redraw:VoidFunction) => (nv:any)=> void;\r\n\r\nexport const Directives=new Map<string,DirectiveFunc>;\r\n\r\ndeclare type MyFileItem = { name: string, size: number, type: string, lastModified: number };\r\ndeclare type MyFileInputValue = { id: string, files: MyFileItem[] };\r\n\r\nDirectives.set(\"validity\", (el:HTMLElement,v:any,mods:string[],redraw:VoidFunction) => {\r\n    // <input #validity=${\"error message\"}>\r\n    const inp=<HTMLInputElement>el;\r\n    function SetIt(v:any) {\r\n      if(typeof v !==\"string\") throw new Error(\"Katla: #validity value must be string\");\r\n      inp.setCustomValidity(v);\r\n    }\r\n    SetIt(v);\r\n    return SetIt;\r\n  });\r\n\r\n  \r\nDirectives.set(\"ref\", (el:HTMLElement,v:any,mods:string[],redraw:VoidFunction) => {\r\n    if(typeof v !==\"function\") throw new Error(\"Katla: #ref value must be function\");\r\n    v(el);\r\n    return ()=>{}\r\n  });\r\n\r\n\r\nDirectives.set(\"bind\",(el:HTMLElement,bindTo:any,mods:string[],redraw:VoidFunction) => {\r\n  let tp=el.tagName.toLowerCase();\r\n  if(tp===\"input\") {\r\n    tp=(<HTMLInputElement>el).type;\r\n    if(!tp) tp=\"text\";\r\n    tp=tp.toLowerCase();\r\n  }\r\n\r\n  let BoundVal:any;\r\n  let SetVal:(v:string|number|boolean|MyFileInputValue)=>void;\r\n  let LastVal:any;\r\n\r\n  const HasTrimMod=mods.indexOf(\"trim\")>=0;\r\n\r\n  function GetValueValue():string|number {\r\n    let vv:string|number=(<HTMLInputElement>el).value;\r\n    if(tp===\"number\" || tp===\"range\" || mods.indexOf(\"number\")>=0) vv=parseInt(vv);\r\n    if(HasTrimMod) vv=(<string>vv).trim();\r\n    return vv;\r\n  }\r\n\r\n  function SetElemProp() {\r\n    SetVal=undefined;\r\n    if(Array.isArray(bindTo) && bindTo.length===2) {\r\n      if (Array.isArray(bindTo[0]) && typeof bindTo[1]===\"number\") {\r\n        // #bind=${[Array,number]} \r\n        BoundVal=bindTo[0][bindTo[1]];\r\n        SetVal=v=>bindTo[0][bindTo[1]]=v;\r\n      } else if (typeof bindTo[0]===\"object\" && typeof bindTo[1]===\"string\") {\r\n        // #bind=${[object,propName]} \r\n        if(!bindTo[0].hasOwnProperty(bindTo[1])) throw new Error(\"Katla: \" + tp + \" #bind to object does not have property '\" + bindTo[1] + \"'\");\r\n        BoundVal=bindTo[0][bindTo[1]];\r\n        SetVal=v=>bindTo[0][bindTo[1]]=v;\r\n      } else if (typeof bindTo[0]===\"function\" && typeof bindTo[1]===\"function\") {\r\n        // #bind=${[getFunc,setFunc]} - DEPRECATED\r\n        BoundVal=bindTo[0]();\r\n        SetVal=bindTo[1];\r\n      } else if (typeof bindTo[1]===\"function\") {\r\n        // #bind=${[value,setFunc]}\r\n        BoundVal=bindTo[0];\r\n        SetVal=bindTo[1];\r\n      }\r\n    } else if(Array.isArray(bindTo) && bindTo.length===1 && Array.isArray(bindTo[0])) {\r\n        // #bind=${[Array]}\r\n        if(tp!==\"checkbox\") throw new Error(\"Katla: Can only #bind to [Array] with input/checkbox\"); \r\n        BoundVal=bindTo[0];\r\n        SetVal=()=>{}; //dummy to prevent error\r\n    } \r\n    if(!SetVal) throw new Error(\"Katla: Can only #bind to {object}.PropName / [Object,string] / [Array,number] / [value,setFunc] / [Array]\");\r\n\r\n    if(tp===\"radio\") {\r\n      if(!el.hasAttribute(\"value\")) throw new Error(\"Katla: input/radio element missing 'value' attribute - for #bind\");\r\n      let vv=GetValueValue(); \r\n      let value=BoundVal===vv;\r\n      if(value===LastVal) return;\r\n      (<HTMLInputElement>el).checked=value;\r\n      LastVal=value;\r\n    } else if(tp===\"checkbox\") {\r\n      if(typeof BoundVal===\"boolean\") {\r\n        if(BoundVal===LastVal) return;\r\n        (<HTMLInputElement>el).checked=BoundVal; \r\n        LastVal=BoundVal;\r\n        return; \r\n      } else {\r\n        if(!Array.isArray(BoundVal)) throw new Error(\"Katla: #bind value for input/checkbox must be either boolean or array\");\r\n        if(!el.hasAttribute(\"value\")) throw new Error(\"Katla: input/checkbox element missing 'value' attribute - for #bind with array value\");\r\n        let vv=GetValueValue(); \r\n        let value=BoundVal.indexOf(vv)>=0;\r\n        if(value===LastVal) return;\r\n        (<HTMLInputElement>el).checked=value;\r\n        LastVal=value;\r\n      }\r\n    } else if (tp === \"file\") {\r\n      if (!BoundVal || !BoundVal.files || (<MyFileInputValue>BoundVal).files.length === 0) (<any>el).value = \"\"; \r\n    } else {\r\n      if(BoundVal===LastVal) return;\r\n      (<HTMLInputElement>el).value= Number.isNaN(BoundVal) ? '': BoundVal.toString();\r\n      LastVal=BoundVal;\r\n    }\r\n  }\r\n\r\n  SetElemProp();\r\n\r\n  function MyHandler(e:Event) {\r\n    let vv=GetValueValue();\r\n    if(tp===\"radio\") {\r\n      if(!(<HTMLInputElement>el).checked) return;\r\n      SetVal(vv);\r\n      LastVal=vv;\r\n    } else if (tp===\"checkbox\") {\r\n      let ck=(<HTMLInputElement>el).checked;\r\n      if(typeof BoundVal===\"boolean\") {\r\n        SetVal(ck);\r\n      } else {\r\n        let i=BoundVal.indexOf(vv);\r\n        if(ck && i<0) BoundVal.push(vv);\r\n        if(!ck && i>=0) BoundVal.splice(i,1); \r\n      }\r\n      LastVal=ck;\r\n    } else if (tp===\"file\") {\r\n      if (!el.id) el.id = 'file-' + (Math.floor(Math.random() * Date.now()).toString(36));\r\n      SetVal({ id: el.id, files: Array.from((<HTMLInputElement>el).files).map(f => <MyFileItem>{ name: f.name, size: f.size, type: f.type, lastModified: f.lastModified }) });\r\n    } else {\r\n      SetVal(vv);\r\n      LastVal=vv;\r\n      if(HasTrimMod && e.type===\"change\" && (<HTMLInputElement>el).value!==LastVal) (<HTMLInputElement>el).value=LastVal;\r\n    }\r\n\r\n    if(mods.indexOf(\"noredraw\")<0) redraw();\r\n  }\r\n\r\n  const HasEagerMod=mods.indexOf(\"eager\")>=0;\r\n  if(HasEagerMod) el.addEventListener(\"input\", MyHandler);\r\n  if(!HasEagerMod || HasTrimMod) el.addEventListener(\"change\", MyHandler);\r\n\r\n \r\n  return (nv:any)=>{ \r\n    bindTo=nv;\r\n    SetElemProp();\r\n  }\r\n});\r\n\r\n", "import { Directives } from \"./Directives\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport {ComponentType} from \"./ContentComponent\";\r\n\r\nexport function CreateOperationAttr(node:HTMLElement,name:string,getVal:(args:any[])=>any,curComp:ComponentType,content:any): Operation {\r\n  let LastVar=content;\r\n  let DirUpdate:(v:any)=>void;\r\n\r\n  if (name.charAt(0)===\"@\") {\r\n    // event\r\n    if(typeof content !==\"function\") throw new Error(\"Katla: '\" + name + \"' handler must be function\");\r\n    let parts=name.substr(1).split(\"|\");\r\n    node.addEventListener(parts[0], e => {\r\n      if(parts.indexOf(\"self\")>0 && e.target!==node) return;\r\n      if(parts.indexOf(\"prevent\")>0) e.preventDefault();\r\n      if(parts.indexOf(\"stop\")>0) e.stopPropagation();\r\n      let frv=LastVar(e);\r\n      if(!parts.includes(\"noredraw\")) {\r\n        if (frv instanceof Promise) {\r\n          frv.then(() => curComp.$redraw());\r\n        } else {\r\n          curComp.$redraw();\r\n        }\r\n      }\r\n    },\r\n    { capture: parts.indexOf(\"capture\")>0,\r\n      once: parts.indexOf(\"once\")>0,\r\n      passive: parts.indexOf(\"passive\")>0 });  \r\n\r\n\r\n  } else if (name.charAt(0)===\".\") {\r\n    // property\r\n    (<any>node)[name.substr(1)]=content;\r\n\r\n  } else if (name.charAt(0)===\"#\") {\r\n    // directive\r\n    let parts=name.substr(1).split(\"|\");\r\n    let hh=Directives.get(parts[0]); \r\n    if(hh===undefined) throw new Error(\"Katla: Unknown directive '#\"+parts[0] + \"'\");\r\n    DirUpdate=hh(node,content,parts.slice(1),()=>curComp.$redraw());\r\n\r\n  } else {\r\n    // plain old attribute\r\n    if(content===false || content===null || content===undefined) {\r\n      // Do nothing - on creation there is no need to remove attribute if null (won't be there)\r\n    } else if(content===true) {\r\n      node.setAttribute(name,\"\");\r\n    } else {\r\n      node.setAttribute(name,content.toString());\r\n    }\r\n  }\r\n\r\n  return {\r\n    GetData:getVal,\r\n    Update: (v:any)=> {\r\n      if(v===LastVar && typeof v !==\"object\") return;\r\n      LastVar=v;\r\n      if (name.charAt(0)===\"@\") {\r\n        // event\r\n        if(typeof v !==\"function\") throw new Error(\"Katla: \" + name + \" handler must be function\");\r\n        // do nothing - LastVar already set to new function reference\r\n      } else if(name.charAt(0)===\".\") {\r\n        // property\r\n        (<any>node)[name.substr(1)]=v;\r\n      } else if(name.charAt(0)===\"#\") {\r\n        // directive\r\n        DirUpdate(v);\r\n      } else {\r\n        if(v===false || v===null || v===undefined) {\r\n          node.removeAttribute(name);\r\n        } else if(v===true) {\r\n          node.setAttribute(name,\"\");\r\n        } else {\r\n          node.setAttribute(name,v.toString());      \r\n        }\r\n      }\r\n    },\r\n    \r\n    Unload:()=>{}\r\n  }\r\n}\r\n", "import { Content } from \"./ContentBase\";\r\nimport { HtmlBuilder } from \"./HtmlBuilder\";\r\nimport { OperationContent } from \"./OperationContent\";\r\nimport {ComponentType} from \"./ContentComponent\";\r\n\r\nexport function CreateContentTemplateResult(tr:TemplateResult,op:OperationContent,curComp:ComponentType):Content {\r\n  let Live=tr.bldr.MakeLive(tr.args,op.node2,curComp);\r\n  return {\r\n    Update:(v:TemplateResult)=>Live.Update(v.args),\r\n    Unload:Live.Unload,\r\n    MatchForUpdate:(v:TemplateResult)=>v.bldr===tr.bldr\r\n  }\r\n}\r\n\r\nexport class TemplateResult {\r\n  bldr:HtmlBuilder;\r\n  args:any[];\r\n  constructor(bldr:HtmlBuilder,args:any[]) {\r\n    this.bldr=bldr;\r\n    this.args=args;\r\n  }\r\n}", "import { Content } from \"./ContentBase\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport function CreateContentText(v:string|number|object,op:OperationContent):Content {\r\n  let ctNode=document.createTextNode(v.toString());\r\n  op.node2.parentNode.insertBefore(ctNode,op.node2);\r\n  return {\r\n    Update:newV=>{\r\n        if(newV!==v) {\r\n          v=newV;\r\n          ctNode.data=newV.toString();\r\n        }\r\n      },\r\n    Unload:()=>{},\r\n    MatchForUpdate:v=>true\r\n  }\r\n}", "import {GetContentType, ContentType, CreateContent, Content} from \"./ContentBase\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport type ComponentType = {\r\n  render:()=>any;\r\n  load?:()=>void;\r\n  unload?:()=>void;\r\n  $get?:(key:string)=>any;\r\n  $set?:(key:string,v:any)=>void;\r\n  $parent?:ComponentType;\r\n  $redraw?:VoidFunction;\r\n  /** @deprecated Use .$redraw instead */\r\n  $app?:{redraw:VoidFunction};  // only for backwards compat\r\n}\r\n\r\nexport type ComponentWrapper=[new()=>ComponentType] |\r\n  [new()=>ComponentType,Object] |\r\n  [new()=>ComponentType,Object,(c:ComponentType)=>void];\r\n\r\nexport function CreateContentComponent(cw:ComponentWrapper, op:OperationContent, curComp:ComponentType):Content {\r\n  let comp = new cw[0];\r\n  comp.$parent=curComp;\r\n  comp.$redraw=()=>curComp.$redraw();\r\n  comp.$app={redraw:()=>curComp.$redraw()}; // only for backwards compat\r\n  let CtxValues:Map<string,any>;\r\n  comp.$get=(key:string):any=>{\r\n    if(CtxValues) {\r\n      let rv = CtxValues.get(key);\r\n      if (rv !== undefined) return rv;\r\n    }\r\n    if(curComp!==undefined) return curComp.$get(key);\r\n    return undefined;\r\n  };\r\n  comp.$set=(key:string,v:any)=>{\r\n    if(!CtxValues) CtxValues=new Map<string,any>();\r\n    CtxValues.set(key,v);\r\n  };\r\n\r\n  if(cw.length>1) Object.assign(comp,cw[1]);\r\n  if(cw.length>2) cw[2](comp);\r\n  if(comp.load) comp.load();\r\n  if(!comp.render || typeof comp.render!==\"function\") throw new Error(\"Katla: Component must have .render method\");\r\n  let Output=comp.render();\r\n  let ctType=GetContentType(Output);\r\n  let Content=CreateContent(Output,op,comp);\r\n  \r\n  let WasUnloaded=false;\r\n  return {\r\n    Update:(v:ComponentWrapper)=>{\r\n      if(WasUnloaded) return;\r\n      cw=v;\r\n      if(cw.length>1) Object.assign(comp,cw[1]);\r\n      Output=comp.render();\r\n      let ctType2=GetContentType(Output);\r\n      if(ctType2===ContentType.NoChange) return;\r\n      if(ctType===ctType2 && Content.MatchForUpdate(Output)) {\r\n        Content.Update(Output)\r\n      } else {\r\n        Content.Unload();\r\n        op.ClearContent();\r\n        ctType=ctType2;\r\n        Content=CreateContent(Output,op,comp);\r\n      }\r\n    },\r\n    Unload:()=>{\r\n      if(WasUnloaded) return;\r\n      if(comp.unload) comp.unload();\r\n      Content.Unload();\r\n      WasUnloaded=true;\r\n    },\r\n    MatchForUpdate:(v:ComponentWrapper)=> cw[0] === v[0]\r\n  }\r\n}\r\n", "import { CreateOperationContent, OperationContent } from \"./OperationContent\";\r\nimport { Content } from \"./ContentBase\";\r\nimport {ComponentType} from \"./ContentComponent\";\r\n\r\nexport function CreateContentArray(v:any[],op:OperationContent,curComp:ComponentType):Content {\r\n  let arrOps:OperationContent[]=[];\r\n  Make(v);\r\n\r\n  // this is a function because it is also called from Update\r\n  function Make(items:any[]) {\r\n    if(items.length===0) return;\r\n    let frag=document.createDocumentFragment();\r\n    let cmt1=document.createComment(\"\");\r\n    frag.append(cmt1);\r\n    let aop:OperationContent,cmt2:Comment;\r\n    for(const itm of items) {\r\n      cmt2=document.createComment(\"\");\r\n      frag.append(cmt2);\r\n      aop=CreateOperationContent(cmt1,-1,curComp,itm);\r\n      arrOps.push(aop);\r\n      cmt1=cmt2;\r\n    }  \r\n    op.node2.parentNode.insertBefore(frag,op.node2);\r\n  } \r\n\r\n  return {\r\n    Update:items=>{\r\n      if(arrOps.length===0) { Make(items); return; } // faster to call Make than inserting individual items - because Make uses fragtment\r\n      if(items.length===0) { op.ClearContent(); arrOps=[]; return; } \r\n      let aop:OperationContent,naop:OperationContent;\r\n      for(let i=0;i<items.length || i<arrOps.length;i++) {\r\n        if(i<items.length && i<arrOps.length) {\r\n          arrOps[i].Update(items[i])\r\n        } else if (items.length<arrOps.length) {\r\n          // new length is less - so delete remaining\r\n          aop=arrOps[i];\r\n          aop.Unload();\r\n          aop.ClearContent();\r\n          aop.node1.parentNode.removeChild(aop.node1);\r\n          arrOps[i-1].node2=aop.node2;\r\n          arrOps.splice(i,1);\r\n          i-=1;\r\n        } else {\r\n          // new length is more - so insert remaining\r\n          let nc=document.createComment(\"\");\r\n          aop=arrOps[arrOps.length-1];\r\n          aop.node2.parentNode.insertBefore(nc,aop.node2);\r\n          naop=CreateOperationContent(nc,-1,curComp,items[i]);\r\n          aop.node2=nc;\r\n          arrOps.push(naop);\r\n        }\r\n      }\r\n    },\r\n\r\n    Unload:()=>{arrOps.forEach(op=>op.Unload());arrOps=[]},\r\n\r\n    MatchForUpdate:v=>true\r\n  }\r\n}\r\n", "import { CreateContentTemplateResult, TemplateResult } from \"./ContentTemplateResult\";\r\nimport { CreateContentRaw,RawHtml } from \"./ContentRaw\";\r\nimport { CreateContentText } from \"./ContentText\";\r\nimport { ComponentType, CreateContentComponent} from \"./ContentComponent\";\r\nimport { CreateContentArray } from \"./ContentArray\";\r\nimport { OperationContent } from \"./OperationContent\";\r\n\r\nexport type Content={\r\n  Update:(v:any)=>void;\r\n  Unload:()=>void;\r\n  MatchForUpdate:(v:any)=>boolean;\r\n}\r\n\r\nexport const enum ContentType  {\r\n  Null,\r\n  Text,\r\n  Component,\r\n  Raw,\r\n  TemplateResult,\r\n  NoChange,\r\n  Array,\r\n}\r\n\r\nexport function GetContentType(v:any):ContentType {\r\n  if(v===null || v===\"\" || v===false) return ContentType.Null;\r\n  if(v instanceof TemplateResult) return ContentType.TemplateResult;\r\n  if(Array.isArray(v)) return v.length>0 && typeof v[0]===\"function\" ? ContentType.Component : ContentType.Array;\r\n  if(v instanceof RawHtml) return ContentType.Raw;\r\n  if(v instanceof NoChange)  return ContentType.NoChange;\r\n  if(typeof v ===\"string\" || typeof v===\"number\" || typeof v===\"object\") return ContentType.Text;\r\n  throw new Error(\"Katla: Unknown content type: \" + typeof v);\r\n}\r\n\r\nexport function CreateContent(v:any,op:OperationContent,curComp:ComponentType):Content {\r\n  let tp=GetContentType(v)\r\n  switch(tp) {\r\n    case ContentType.Null:\r\n      return {Update:v=>{},Unload:()=>{},MatchForUpdate:v=>true};\r\n    case ContentType.Text:\r\n      return CreateContentText(<string|number|object>v,op);\r\n    case ContentType.Component:\r\n      return CreateContentComponent(v,op,curComp);\r\n    case ContentType.Raw:\r\n      return CreateContentRaw(v,op);\r\n    case ContentType.TemplateResult:\r\n      return CreateContentTemplateResult(v,op,curComp);\r\n    case ContentType.Array:\r\n      return CreateContentArray(v,op,curComp);\r\n    case ContentType.NoChange:\r\n      throw new Error(\"Katla: NoChange at creation\");\r\n  }   \r\n}\r\n\r\nexport class NoChange {\r\n}", "import { GetContentType,ContentType,CreateContent,Content } from \"./ContentBase\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport {ComponentType} from \"./ContentComponent\";\r\n\r\nexport type OperationContent = Operation & {\r\n  node1: Node,\r\n  node2: Node,\r\n  ClearContent: ()=>void,\r\n/*  MatchArrItem: (v:any)=>boolean,*/\r\n}\r\n\r\nexport function CreateOperationContent(node1x:Node,varIdx:number,curComp:ComponentType,content:any):OperationContent {\r\n  let ctType=GetContentType(content);\r\n  let Content:Content;\r\n\r\n  let rv:OperationContent= {\r\n    GetData: (args:any[])=> args[varIdx],\r\n    node1:node1x,\r\n    node2:node1x.nextSibling,\r\n    Update: (v:any)=> {\r\n      let ctType2=GetContentType(v);\r\n      if(ctType2===ContentType.NoChange) return;   \r\n      if(ctType===ctType2 && Content.MatchForUpdate(v)) {\r\n        Content.Update(v)\r\n      } else {\r\n        Content.Unload();\r\n        rv.ClearContent();\r\n        ctType=ctType2;\r\n        Content=CreateContent(v,rv,curComp);\r\n      }\r\n    },\r\n    ClearContent: () => {\r\n      let n=rv.node1.nextSibling;\r\n      while(n!==rv.node2) {\r\n        rv.node1.parentNode.removeChild(n);\r\n        n=rv.node1.nextSibling;\r\n      }\r\n    },\r\n    Unload:()=> ()=> Content.Unload(),\r\n/*    MatchArrItem: (v:any)=> {\r\n      let ctType3=GetContentType(v,ctx);\r\n      return ctType===ContentType.NoChange || (ctType===ctType3 && Content.MatchForUpdate(v));\r\n    }*/\r\n  }\r\n\r\n  Content=CreateContent(content,rv,curComp);\r\n  return rv;\r\n}\r\n\r\n\r\n", "import { CreateOperationAttr } from \"./OperationAttr\";\r\nimport { Operation } from \"./OperationBase\";\r\nimport { CreateOperationContent } from \"./OperationContent\";\r\nimport {ComponentType} from \"./ContentComponent\";\r\n\r\ntype PlaceHolder = {\r\n  path:number[],\r\n  CreateOp:(node:HTMLElement,curComp:ComponentType,args:any[])=>Operation|null\r\n}\r\n\r\nexport class HtmlBuilder {\r\n  #phs:PlaceHolder[]=[];\r\n  #tmpl=document.createElement(\"template\");\r\n\r\n  constructor(fixed:TemplateStringsArray) {\r\n    let x=\"\";\r\n    for(let i=0;i<fixed.length-1;i++) {\r\n      x +=fixed[i];\r\n      x +=this.#InAttr(x) ? '{{fv' + i + '}}' : '<!--{{fv' + i + '}}-->'; \r\n    }\r\n    x+=fixed[fixed.length-1];\r\n    this.#tmpl.innerHTML=x;\r\n    this.#FillPlaceHolders(this.#tmpl.content,[]);     \r\n  }\r\n\r\n  #InAttr(x:string) {\r\n    return x.lastIndexOf(\"<\") > x.lastIndexOf(\">\");\r\n  }\r\n\r\n  // is a function because it needs to call itself recursively\r\n  #FillPlaceHolders(node:Node,path:number[]) {\r\n    let cn:Node,x:string,k:number,fvID:number,attr:Attr,cnPath:number[];\r\n    for(let i=0;i<node.childNodes.length;i++) {\r\n      cn=node.childNodes[i];\r\n      cnPath=path.concat(i);\r\n      if(cn.nodeType===1) { //element\r\n        let cne=<HTMLElement>cn;\r\n        // if this is a <select> element - process children first - cannot set value before children present\r\n        if(cne.tagName.toLowerCase()===\"select\") this.#FillPlaceHolders(cn,cnPath);\r\n        let classSC:{class:string,argidx:number}[]=[];\r\n        let dirPhs:PlaceHolder[]=[];\r\n        let gotClass=false;\r\n        for(let j=0; j<cne.attributes.length;j++) {\r\n          attr=cne.attributes[j];\r\n          if(attr.name===\"class\") {\r\n            if(classSC.length>0) throw new Error(\"Katla: Cannot combine 'class' and 'class:...' attributes on same element\");\r\n            gotClass=true;\r\n          }\r\n          x=attr.value;\r\n          k=x.indexOf(\"{{fv\");\r\n          if(k<0){\r\n            if(attr.name.startsWith(\"class:\")) throw new Error(\"Katla: \" + attr.name + \" attribute must have ${boolean} value\");\r\n            if(attr.name.charAt(0)===\"#\" || attr.name.charAt(0)===\".\") {\r\n            // fixed value special attribute \r\n              (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrStatic(cnPath,attr.name,x)); // 1=static value\r\n              cne.removeAttribute(attr.name);\r\n              j-=1;\r\n            }\r\n            continue;\r\n          }\r\n          let va:(string|number)[]=[];\r\n          while(k>=0) {\r\n            if(k>0) va.push(x.substr(0,k));\r\n            x=x.substr(k+4)\r\n            k=x.indexOf(\"}}\");\r\n            if(k<0) throw new Error(\"Katla: Unexpected missing }}\");\r\n            fvID=parseInt(x.substr(0,k));\r\n            va.push(fvID);\r\n            x=x.substr(k+2);\r\n            k=x.indexOf(\"{{fv\");\r\n          }\r\n          if(x.length>0) va.push(x);\r\n          if(va.length===1) {\r\n            // simple attribute (type 2)\r\n            if(attr.name.startsWith(\"class:\")) {\r\n              if(gotClass) throw new Error(\"Katla: Cannot combine 'class' and 'class:...' attributes on same element\");\r\n              classSC.push({class:attr.name.substr(6),argidx:<number>(va[0])})\r\n            } else {\r\n              (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrDynamic(cnPath, attr.name, <number>(va[0]))); \r\n            }\r\n          } else {\r\n            if(attr.name.startsWith(\"class:\")) throw new Error(\"Katla: \" + attr.name + \" attribute must have ${boolean} value\");\r\n            // concat attribute (type 3)\r\n            (attr.name.charAt(0)===\"#\"?dirPhs:this.#phs).push(CreatePlaceholderAttrConcat(cnPath,attr.name,va)); \r\n          }\r\n          cne.removeAttribute(attr.name);\r\n          j-=1;\r\n        }\r\n        if(classSC.length>0) this.#phs.push(CreatePlaceholderAttrClasses(cnPath,classSC)); \r\n        // add placeholders for directives (attr.name start with #) last - so other attributes are set before directives run\r\n        this.#phs.push(...dirPhs);\r\n        if(cne.tagName.toLowerCase()!==\"select\") this.#FillPlaceHolders(cn,cnPath);\r\n\r\n      } else if (cn.nodeType===8) { //nodeType 8 = comment\r\n        let cnc=<Comment>cn;\r\n        if(cnc.data.substr(0,4)===\"{{fv\") {\r\n          fvID=parseInt(cnc.data.substr(4,cnc.data.length-6));\r\n          cnc.data=\"\";\r\n          node.insertBefore(document.createComment(\"\"),cn);\r\n          this.#phs.push(CreatePlaceholderContent(cnPath,fvID));\r\n          i+=1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  MakeLive(args:any[],beforeNode:Node,curComp:ComponentType) {\r\n    let cl=this.#tmpl.content.cloneNode(true); \r\n    let ops=this.#phs.map(ph=>{\r\n      // get all nodes first - because ph.CreateOp will insert new node - changing indexes\r\n      let n=cl;\r\n      ph.path.forEach(idx=>n=n.childNodes[idx])\r\n      return {ph,n};\r\n    }).map(itm=> itm.ph.CreateOp(<HTMLElement>(itm.n),curComp,args)).filter(op=>op!==null);\r\n\r\n    beforeNode.parentNode.insertBefore(cl,beforeNode);\r\n    return {Update: (args:any[])=>{for(const op of ops) op.Update(op.GetData(args))},\r\n            Unload: ()=> {for(const op of ops) op.Unload()}};\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CreatePlaceholderAttrStatic(path:number[],name:string,value:string) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,curComp:ComponentType,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>value;\r\n      // this is executed also for static - because it initializes the attribute with the static value\r\n      CreateOperationAttr(node,name, getVal,curComp, getVal(args)); \r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrDynamic(path:number[],name:string,value:number) {\r\n  if(name.startsWith(\"_\")) name=name.substring(1);\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,curComp:ComponentType,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>args[value];\r\n      return CreateOperationAttr(node,name, getVal, curComp, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrConcat(path:number[],name:string,value:(string|number)[]) {\r\n  if(name.startsWith(\"_\")) name=name.substring(1);\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,curComp:ComponentType,args:any[]):Operation|null {\r\n      let getVal: (args:any[])=>any;\r\n      if((name===\"#bind\" || name.substr(0,6)===\"#bind|\") && value.length===2 && typeof value[1]===\"string\" && value[1].charAt(0)===\".\") {\r\n        // #bind={obj}.prop\r\n        //getVal=(args:any[])=>MakeRef(args[<number>(value[0])],(<string>(value[1])).substr(1));\r\n        getVal=(args:any[])=>[args[<number>(value[0])] , (<string>(value[1])).substr(1)] //turn it into [Object,propName]\r\n      }  else {\r\n        getVal=(args:any[])=>value.map((p:string|number)=> typeof p===\"string\" ? p : args[p].toString()).join(\"\");\r\n      }\r\n      return CreateOperationAttr(node,name, getVal, curComp, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderAttrClasses(path:number[],value:{class:string,argidx:number}[]) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,curComp:ComponentType,args:any[]):Operation|null {\r\n      let getVal=(args:any[])=>{\r\n        let rv=\"\";\r\n        let v:unknown;\r\n        for(let i=0;i<value.length;i++) {\r\n          v=args[value[i].argidx];\r\n          if(typeof v!==\"boolean\") throw new Error(\"Katla: class:\" + value[i].class + \" value must be boolean\");\r\n          if(v) rv+=(rv.length>0?\" \":\"\") + value[i].class;\r\n        }\r\n        return rv.length===0 ? false:rv;\r\n      }\r\n      return CreateOperationAttr(node,\"class\", getVal, curComp, getVal(args)); \r\n    }\r\n  }\r\n}\r\n\r\nfunction CreatePlaceholderContent(path:number[],varidx:number) {\r\n  return {\r\n    path:path,\r\n    CreateOp(node:HTMLElement,curComp:ComponentType,args:any[]):Operation|null {\r\n       return CreateOperationContent(node,varidx,curComp,args[varidx])\r\n    }\r\n  };\r\n}\r\n", "import { HtmlBuilder } from \"./HtmlBuilder\";\r\nimport { CreateOperationContent } from \"./OperationContent\";\r\nimport { TemplateResult } from \"./ContentTemplateResult\";\r\n\r\nlet CachedBuilders=new Map<TemplateStringsArray,HtmlBuilder>();\r\nexport function html(fixed:TemplateStringsArray,...args:any[]) {\r\n  let bldr=CachedBuilders.get(fixed);\r\n  if(!bldr) {\r\n    bldr=new HtmlBuilder(fixed);\r\n    CachedBuilders.set(fixed,bldr);\r\n  }\r\n  return new TemplateResult(bldr,args);\r\n}\r\n\r\nexport function mount(el:string|Element,render:()=>any):VoidFunction {\r\n  let ac=new AppComponent(el,render);\r\n  return ()=>ac.$redraw();\r\n}\r\n\r\nclass AppComponent {\r\n  constructor(el:string|Element, render:()=>any) {\r\n    if (typeof el === \"string\") el = document.querySelector(el);\r\n    let frag=document.createDocumentFragment();\r\n    let c1=document.createComment(\"Katla\");\r\n    frag.appendChild(c1);\r\n    let c2=document.createComment(\"/Katla\");\r\n    frag.appendChild(c2);\r\n\r\n    let op=CreateOperationContent(c1,-1, this ,render());\r\n    \r\n    this.#DoUpdate=()=>  op.Update(render());\r\n\r\n    el.appendChild(frag);\r\n  }\r\n  render() {}\r\n\r\n  #DoUpdate:()=>void;\r\n\r\n  $redraw(): void {\r\n    this.#DoUpdate();\r\n  }\r\n\r\n  #CtxValues=new Map<string,any>();\r\n  $get=(key:string)=> this.#CtxValues.get(key);\r\n  $set=(key:string,v:any)=>{this.#CtxValues.set(key,v)}\r\n}", "import { NoChange } from \"./ContentBase\";\r\nimport { ComponentWrapper } from \"./ContentComponent\";\r\n\r\nclass compMemo {\r\n  deps:any[];\r\n  render2:()=>any;\r\n  #lastDeps:any[];\r\n  render() {\r\n    if(this.#lastDeps && this.#lastDeps.length===this.deps.length) {\r\n      let same=true;\r\n      for(let i=0;i<this.#lastDeps.length;i++) {\r\n        if(this.#lastDeps[i]!==this.deps[i]) {same=false;break;}\r\n      }\r\n      if(same) {\r\n        this.deps=undefined;\r\n        return new NoChange();\r\n      }\r\n    }\r\n    this.#lastDeps=Object.assign({},this.deps);\r\n    this.deps=undefined;\r\n    return this.render2();\r\n  }\r\n}\r\n\r\nexport function memo(deps:any[],render:()=>any):ComponentWrapper {\r\n  if(!deps || !Array.isArray(deps)) throw new Error(\"Katla: memo deps argument must be array\");\r\n  if(!render || typeof render!==\"function\") throw new Error(\"Katla: memo render argument must be function\");\r\n  return [compMemo,{deps,render2:render}];\r\n}\r\n", "declare type InitData = { exec: string, state: InitStateItem[], funcs: string[] };\r\ndeclare type InitStateItem =[name: string, value: any, includeInPB: boolean] |\r\n      [name: string, value: any, includeInPB: boolean, qsID: string] |\r\n      [name: string, value: any, includeInPB: boolean, qsID: string, qsDefault: string];;\r\n\r\nexport function SpiritInit(data: InitData) {\r\n  let ThePage: any = {\r\n    PostBack() { return ServerFunc(null, []); }\r\n  };\r\n  let PostBackIncludes: string[] = [];\r\n  let QSTriggers = new Map<string, { id: string, default: string }>();\r\n\r\n  for (const itm of data.state) AddInitialStateItem(itm);\r\n  if (QSTriggers.size > 0) UpdateQS();\r\n  for (const fn of data.funcs) ThePage[fn]=(...args: any[]) => ServerFunc(fn, args);\r\n\r\n\r\n  function AddInitialStateItem(isi: InitStateItem): void {\r\n    const name = isi[0];\r\n    let value = isi[1];\r\n    if (isi[2]) PostBackIncludes.push(name);\r\n    if (isi.length <= 3) {\r\n      ThePage[name] = value;\r\n      return;\r\n    }\r\n    Object.defineProperty(ThePage, name, {\r\n      get: () => value,\r\n      set: v => {\r\n        if (v === value) return;\r\n        value = v;\r\n        UpdateQS();\r\n      },\r\n      enumerable: true,\r\n      configurable:false\r\n    });\r\n    QSTriggers.set(name, { id: isi[3], default: isi.length>4 ? isi[4]:null });\r\n  }\r\n\r\n  function UpdateQS() {\r\n    let usp = new URLSearchParams();\r\n    let QSVal: any;\r\n    for (let kv of QSTriggers) {\r\n      QSVal = ThePage[kv[0]];\r\n      QSVal = typeof QSVal === \"boolean\" ? (QSVal ? \"1\" : \"0\") : QSVal.toString();\r\n      if (kv[1].default !== null && QSVal === kv[1].default) continue;\r\n      usp.set(kv[1].id, QSVal);\r\n    }\r\n    history.replaceState(null, null, \"?\" + usp.toString());\r\n  }\r\n\r\n  function ProcFetchErr(msg: string, err: any) {\r\n    document.body.innerHTML = `<h1 style='color:red'>Program Error! \u2639\uFE0F</h1>\r\n<p>` + msg + ` - see log for details.</p>\r\n<p><a href='javascript:location.reload()'>Reload page</a></p>`;\r\n    throw err;\r\n  }\r\n\r\n  async function ProcServerResponse(r:Response):Promise<any> {\r\n    let rj = await r.json();\r\n    if (rj.getFile) return await GetFile(rj.getFile.inputId, rj.getFile.fileIdx, rj.getFile.cbId);\r\n    Object.assign(ThePage, rj.state);\r\n    if (rj.exec) (new Function(rj.exec))();\r\n    return rj.funcres;\r\n  }\r\n\r\n  async function ServerFunc(funcID: string, args: any[]): Promise<any> {\r\n    let d: any = { state:{} };\r\n    for (let id of PostBackIncludes) d.state[id] = ThePage[id];\r\n    if (funcID !== null) d[\"func\"] = [funcID, args];\r\n    let r;\r\n    try {\r\n      r = await fetch(location.href, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(d),\r\n        redirect: \"error\",\r\n        headers: { \"content-type\": \"application/json\", \"X-Spirit\": \"X\" }\r\n      });\r\n    } catch (err) {\r\n      ProcFetchErr(\"Error sending server function request\", err);\r\n    }\r\n    if(r.status>=400) ProcFetchErr(\"Error sending server function request\", new Error(\"Server response: \" + r.status + \" \" +r.statusText + \" (executing server function '\" + funcID + \"')\"));\r\n    return await ProcServerResponse(r);\r\n  }\r\n\r\n  async function GetFile(inputId: string, fileIdx: number, cbId: string) {\r\n    let el = document.getElementById(inputId);\r\n    let file = <File>(<any>el).files[fileIdx];\r\n    let r;\r\n    try {\r\n      r = await fetch(location.href, {\r\n        method: \"POST\",\r\n        body: file,\r\n        redirect:\"error\",\r\n        headers: { \"X-Spirit-File\":cbId, \"content-type\": \"application/octet-stream\", \"X-Spirit\": \"X\" }\r\n      });\r\n    } catch (err) {\r\n      ProcFetchErr(\"Error sending file to server\", err);\r\n    }\r\n    if(r.status>=400) ProcFetchErr(\"Error sending file to server\",new Error(\"Server response: \" + r.status + \" \" +r.statusText + \" (sending file: '\" + file.name + \"')\"));\r\n    return await ProcServerResponse(r);\r\n  }\r\n\r\n  return ThePage;\r\n}\r\n", "import { RawHtml } from \"./ContentRaw\";\r\nimport { html, mount } from './app';\r\nimport { memo } from \"./memo\";\r\nimport { Directives, DirectiveFunc } from \"./Directives\";\r\nimport { SpiritInit } from \"./SpiritPage\";\r\n\r\nconst raw= (html:string)=> new RawHtml(html);\r\n\r\nconst directive= (name:string, f:DirectiveFunc) => Directives.set(name,f);\r\n\r\n/** @deprecated Use .mount instead */\r\nconst app=(el:string|Element,render:()=>any)=> {\r\n  return {redraw:mount(el,render)};\r\n}\r\n\r\n(<any>globalThis).Katla={app,html,mount,raw,directive,memo};\r\n(<any>globalThis).html=html;\r\n(<any>globalThis).SpiritInit=SpiritInit;\r\n"],
  "mappings": "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",
  "names": ["RawHtml", "html", "CreateContentRaw", "v", "op", "t2", "nv", "Directives", "el", "v", "mods", "redraw", "inp", "SetIt", "bindTo", "tp", "BoundVal", "SetVal", "LastVal", "HasTrimMod", "GetValueValue", "vv", "SetElemProp", "value", "MyHandler", "e", "ck", "i", "f", "HasEagerMod", "nv", "CreateOperationAttr", "node", "name", "getVal", "curComp", "content", "LastVar", "DirUpdate", "parts", "e", "frv", "hh", "Directives", "v", "CreateContentTemplateResult", "tr", "op", "curComp", "Live", "v", "TemplateResult", "bldr", "args", "CreateContentText", "v", "op", "ctNode", "newV", "CreateContentComponent", "cw", "op", "curComp", "comp", "CtxValues", "key", "rv", "v", "Output", "ctType", "GetContentType", "Content", "CreateContent", "WasUnloaded", "ctType2", "CreateContentArray", "v", "op", "curComp", "arrOps", "Make", "items", "frag", "cmt1", "aop", "cmt2", "itm", "CreateOperationContent", "naop", "i", "nc", "GetContentType", "v", "TemplateResult", "RawHtml", "NoChange", "CreateContent", "op", "curComp", "CreateContentText", "CreateContentComponent", "CreateContentRaw", "CreateContentTemplateResult", "CreateContentArray", "CreateOperationContent", "node1x", "varIdx", "curComp", "content", "ctType", "GetContentType", "Content", "rv", "args", "v", "ctType2", "CreateContent", "HtmlBuilder", "#phs", "#tmpl", "fixed", "x", "i", "#InAttr", "#FillPlaceHolders", "node", "path", "cn", "k", "fvID", "attr", "cnPath", "cne", "classSC", "dirPhs", "gotClass", "j", "CreatePlaceholderAttrStatic", "va", "CreatePlaceholderAttrDynamic", "CreatePlaceholderAttrConcat", "CreatePlaceholderAttrClasses", "cnc", "CreatePlaceholderContent", "args", "beforeNode", "curComp", "cl", "ops", "ph", "idx", "itm", "op", "name", "value", "getVal", "CreateOperationAttr", "p", "rv", "v", "varidx", "CreateOperationContent", "CachedBuilders", "html", "fixed", "args", "bldr", "HtmlBuilder", "TemplateResult", "mount", "el", "render", "ac", "AppComponent", "frag", "c1", "c2", "op", "CreateOperationContent", "#DoUpdate", "#CtxValues", "key", "v", "compMemo", "#lastDeps", "same", "NoChange", "memo", "deps", "render", "SpiritInit", "data", "ThePage", "ServerFunc", "PostBackIncludes", "QSTriggers", "itm", "AddInitialStateItem", "UpdateQS", "fn", "args", "isi", "name", "value", "v", "usp", "QSVal", "kv", "ProcFetchErr", "msg", "err", "ProcServerResponse", "r", "rj", "GetFile", "funcID", "id", "inputId", "fileIdx", "cbId", "file", "raw", "html", "RawHtml", "directive", "name", "f", "Directives", "app", "el", "render", "mount", "memo", "SpiritInit"]
}
